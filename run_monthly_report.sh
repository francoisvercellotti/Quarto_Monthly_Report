#!/bin/sh

# Script pour ex√©cuter le rapport taxi mensuel avec d√©bogage am√©lior√©
# √Ä programmer pour s'ex√©cuter le 1er de chaque mois

# D√©finition des variables
BASE_DIR=$(dirname "$0")
BASE_DIR=$(cd "$BASE_DIR" && pwd)  # Obtenir le chemin absolu
SRC_DIR="${BASE_DIR}/scripts"
LOG_DIR="${BASE_DIR}/logs"
DATE_NOW=$(date +"%Y-%m")
LOG_FILE="${LOG_DIR}/rapport_${DATE_NOW}.log"

# Cr√©ation du r√©pertoire de logs s'il n'existe pas
mkdir -p "$LOG_DIR"

# Fonction pour enregistrer les messages avec horodatage
log() {
    TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
    echo "[${TIMESTAMP}] $1" | tee -a "$LOG_FILE"
}

# D√©but du traitement
log "üöÄ D√©but de la g√©n√©ration du rapport mensuel"
log "üìÇ R√©pertoire de base: $BASE_DIR"
log "üìÇ R√©pertoire source: $SRC_DIR"

# V√©rifier si les fichiers et dossiers n√©cessaires existent
if [ ! -d "$SRC_DIR" ]; then
    log "‚ùå Erreur: le r√©pertoire src/ n'existe pas √† $SRC_DIR"
    exit 1
fi

if [ ! -f "$SRC_DIR/automate_pipeline.py" ]; then
    log "‚ùå Erreur: le fichier automate_pipeline.py n'existe pas √† $SRC_DIR/automate_pipeline.py"
    log "üìÇ Contenu de $SRC_DIR:"
    ls -la "$SRC_DIR" >> "$LOG_FILE" 2>&1
    exit 1
fi

# V√©rifier si Python est install√© et accessible
if ! command -v python >/dev/null 2>&1; then
    # Si 'python' n'est pas trouv√©, essayons 'python3'
    if ! command -v python3 >/dev/null 2>&1; then
        log "‚ùå Erreur: ni python ni python3 n'ont √©t√© trouv√©s. Veuillez installer Python."
        exit 1
    else
        PYTHON_CMD="python3"
    fi
else
    PYTHON_CMD="python"
fi

log "üêç Commande Python: $PYTHON_CMD"

# Aller dans le r√©pertoire du projet
cd "$BASE_DIR" || {
    log "‚ùå Erreur: impossible d'acc√©der au r√©pertoire $BASE_DIR"
    exit 1
}

# R√©cup√©ration des donn√©es du mois pr√©c√©dent
log "üì• R√©cup√©ration et pr√©paration des donn√©es..."
log "üíª Ex√©cution de: $PYTHON_CMD $SRC_DIR/automate_pipeline.py"

# Ex√©cution avec capture d√©taill√©e de l'erreur
OUTPUT=$($PYTHON_CMD "$SRC_DIR/automate_pipeline.py" 2>&1)
EXIT_CODE=$?

# Enregistrer la sortie compl√®te
echo "$OUTPUT" >> "$LOG_FILE"

# V√©rification du succ√®s
if [ $EXIT_CODE -eq 0 ]; then
    log "‚úÖ Script Python ex√©cut√© avec succ√®s"

    # Obtenir le mois du rapport depuis le fichier settings.yaml
    if [ -f "config/settings.yaml" ]; then
        MONTH=$(grep "report_month" config/settings.yaml | cut -d":" -f2 | tr -d ' ')
        REPORT_FILE="report-${MONTH}.html"

        log "‚úÖ Rapport g√©n√©r√© avec succ√®s: $REPORT_FILE"
    else
        log "‚ö†Ô∏è Le fichier config/settings.yaml n'existe pas"
    fi
else
    log "‚ùå Erreur lors de l'ex√©cution du script Python (code $EXIT_CODE)"
    log "üìÑ D√©tail de l'erreur:"
    log "$OUTPUT"
fi

log "üèÅ Traitement termin√©"